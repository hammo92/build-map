import { PageHeader } from "@components/ui/page-header";
import { Content } from "@lib/content/data/content.model";
import { ContentTemplate } from "@lib/contentTemplate/data/contentTemplate.model";
import { Button, Grid, Group, SegmentedControl, Text } from "@mantine/core";
import { params as cloudParams } from "@serverless/cloud";
import axios from "axios";
import camelcaseKeys from "camelcase-keys";
import { getCookie } from "cookies-next";
import { NestedProjectLayout } from "layouts/layouts-nested/nested-projectLayout";
import { GetServerSidePropsContext } from "next";
import Head from "next/head";
import pluralize from "pluralize";
import React, { ReactElement } from "react";
import { CleanedCamel, CleanedSnake } from "type-helpers";

interface ContentPageProps {
    content: CleanedCamel<Content>;
    contentTemplate: CleanedCamel<ContentTemplate>;
    projectId: string;
}

function ContentPage({
    contentTemplate,
    projectId,
    content,
}: ContentPageProps) {
    console.log("contentTemplate :>> ", contentTemplate);
    console.log("content :>> ", content);
    return (
        <>
            <Head>
                <title>Organisation Home</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Group
                direction="column"
                grow
                spacing={0}
                sx={{ height: "100%" }}
                noWrap
            >
                <PageHeader title={pluralize(contentTemplate.name)}>
                    <Text>View:</Text>
                    <SegmentedControl
                        data={[
                            { label: "List", value: "list" },
                            { label: "Cards", value: "cards" },
                            { label: "Board", value: "board" },
                        ]}
                    />
                    <Button>{`Add ${contentTemplate.name}`}</Button>
                </PageHeader>
                <Grid
                    sx={(theme) => ({
                        borderTop: `1px solid ${theme.colors.dark[6]}`,
                    })}
                    gutter="md"
                    px="sm"
                    mx={0}
                >
                    <Grid.Col
                        span={3}
                        sx={(theme) => ({
                            borderRight: `1px solid ${theme.colors.dark[6]}`,
                        })}
                    ></Grid.Col>
                    <Grid.Col span={9}></Grid.Col>
                </Grid>
            </Group>

            {/*<Group>
                        <OrganisationInviteCreate
                            organisationId={organisationId}
                        />
                    </Group> */}
        </>
    );
}

ContentPage.getLayout = (page: ReactElement) => (
    <NestedProjectLayout>{page}</NestedProjectLayout>
);

export async function getServerSideProps({
    params,
    req,
}: GetServerSidePropsContext<{
    contentTemplateId: string;
    projectId: string;
}>) {
    const { contentTemplateId, projectId } = params!;
    const token = getCookie("token", { req });
    const {
        data: { contentTemplate, content },
    } = await axios.get<{
        content: CleanedSnake<Content>[];
        contentTemplate: CleanedSnake<ContentTemplate>;
    }>(
        `${cloudParams.CLOUD_URL}/projects/${projectId}/contentTemplates/${contentTemplateId}`,
        {
            headers: {
                "Content-type": "application/json",
                Authorization: `Bearer ${token}`,
            },
        }
    );

    return {
        props: {
            contentTemplate: camelcaseKeys(contentTemplate),
            content: camelcaseKeys(content),
            projectId,
        },
    };
}

export default ContentPage;
