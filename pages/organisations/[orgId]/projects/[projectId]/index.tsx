import { Avatar } from '@components/avatar'
import { useGetMe } from '@data/user/hooks'
import { Project } from '@lib/project/data/projectModel'
import { Divider, Group, Stack, Title } from '@mantine/core'
import { params as cloudParams } from '@serverless/cloud'
import { organisationState } from '@state/organisation'
import axios from 'axios'
import camelcaseKeys from 'camelcase-keys'
import { getCookie } from 'cookies-next'
import dayjs from 'dayjs'
import { NestedProjectLayout } from 'layouts/layouts-nested/nested-projectLayout'
import { GetServerSidePropsContext } from 'next'
import Head from 'next/head'
import { ReactElement } from 'react'
import { CleanedCamel } from 'type-helpers'
import auth0 from 'utils/auth0'
import { capitalise } from 'utils/stringTransform'

interface ProjectPageProps {
    projectId: string
    projectDetails: CleanedCamel<Project>
}

const WelcomeBanner = () => {
    const { data, isLoading, error } = useGetMe()
    const hour = parseInt(dayjs().format('H'))
    const timeOfDay =
        hour < 12 ? 'morning' : hour < 18 ? 'afternoon' : 'evening'
    return (
        <>{`Good ${timeOfDay}${
            data?.user ? `, ${capitalise(data.user.nickname)}` : ''
        }`}</>
    )
}

function ProjectPage({ projectId, projectDetails }: ProjectPageProps) {
    organisationState.activeOrganisation = projectDetails?.organisationId
    return (
        <>
            <Head>
                <title>Organisation Home</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Stack p="md">
                <Stack spacing={0}>
                    <Title order={3}>{dayjs().format('dddd MMM D')}</Title>
                    <Title>
                        <WelcomeBanner />
                    </Title>
                </Stack>
                <Stack
                    p="md"
                    sx={(theme) => ({
                        background: theme.colors.dark[6],
                        borderRadius: theme.radius.md,
                    })}
                >
                    <Group position="apart">
                        <Title>Projects</Title>
                    </Group>
                    <Divider />
                </Stack>
            </Stack>
        </>
    )
}

ProjectPage.getLayout = (page: ReactElement) => (
    <NestedProjectLayout>{page}</NestedProjectLayout>
)

export async function getServerSideProps({
    params,
    req,
    res,
}: GetServerSidePropsContext<{ projectId: string }>) {
    const session = auth0.getSession(req, res)
    const headers = {
        ...req.cookies,
        ...(session && { Authorization: `Bearer ${session.idToken}` }),
    }
    const { projectId } = params!
    const { data } = await axios.get(
        `${cloudParams.CLOUD_URL}/projects/${projectId}`,
        {
            headers,
        }
    )
    return {
        props: {
            projectId: params!.projectId,
            projectDetails: camelcaseKeys(data.project),
        },
    }
}

export default ProjectPage
