import { GetServerSidePropsContext } from 'next'
import { getCookie } from 'cookies-next'
import axios from 'axios'
import { params as cloudParams } from '@serverless/cloud'
import camelcaseKeys from 'camelcase-keys'
import { ReactElement } from 'react'
import { LayoutShellSideNav } from '../../../../layouts'
import { NavigationList } from '@components/navigation/linkList'
import { faFile, faHouse, faUser } from '@fortawesome/pro-regular-svg-icons'
import { CleanedCamel } from '../../../../type-helpers'
import { ResponseSet } from '@lib/responseSet/data/responseSet.model'
import Head from 'next/head'
import { Stack, Box } from '@mantine/core'
import { PageHeader } from '@components/ui/page-header'
import { ResponseSetCreate } from '@components/responseSet/responseSet-create'
import { ResponseSetList } from '@components/responseSet/responseSet-List'
import { useGetResponseSetCollection } from '@data/responseSet/hooks'

interface ResponseSetPageProps {
    organisationId: string
    initialData: { responseSets: CleanedCamel<ResponseSet>[] }
}

const HomeSidebar = () => {
    return (
        <NavigationList
            items={[
                {
                    link: '/home',
                    icon: faHouse,
                    text: 'Home',
                },
                {
                    link: '/forms',
                    icon: faFile,
                    text: 'Content Templates',
                    active: true,
                },
                {
                    link: '/users',
                    icon: faUser,
                    text: 'Users',
                },
            ]}
        />
    )
}

function ResponseSetPage(props: ResponseSetPageProps) {
    const { data } = useGetResponseSetCollection(
        props.organisationId,
        props.initialData
    )
    return (
        <>
            <Head>
                <title>Response Sets</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Stack spacing={0} sx={{ height: '100%' }}>
                <PageHeader title="Response Sets"></PageHeader>
                <ResponseSetCreate
                    onCreate={console.log}
                    parentId={props.organisationId}
                />
                <Box p="md">
                    <ResponseSetList responseSets={data?.responseSets} />
                </Box>
            </Stack>
        </>
    )
}

ResponseSetPage.getLayout = (page: ReactElement) => (
    <LayoutShellSideNav
        sidebarContent={<HomeSidebar />}
        headerProps={{ title: 'Content Templates' }}
    >
        {page}
    </LayoutShellSideNav>
)

export async function getServerSideProps({
    params,
    req,
}: GetServerSidePropsContext<{ orgId: string }>) {
    const { orgId } = params!
    const token = getCookie('token', { req })
    const { data } = await axios.get(
        `${cloudParams.CLOUD_URL}/responseSets/collections/${orgId}`,
        {
            headers: {
                'Content-type': 'application/json',
                Authorization: `Bearer ${token}`,
            },
        }
    )
    return {
        props: {
            organisationId: params!.orgId,
            initialData: camelcaseKeys(data),
        },
    }
}

export default ResponseSetPage
