import { FormTemplate } from "@components/formTemplate";
import { FormTemplateCreateModal } from "@components/formTemplate/formTemplate-create/formTemplate-create-modal";
import { NavigationList } from "@components/navigation/link-list";
import { useGetOrganisationFormTemplates } from "@data/formTemplate/hooks";
import { faFile, faHouse, faUser } from "@fortawesome/pro-regular-svg-icons";
import {
    Box,
    Button,
    Container,
    Grid,
    Group,
    Paper,
    Title,
} from "@mantine/core";
import { LayoutShellSideNav } from "layouts";
import { GetServerSidePropsContext } from "next";
import Head from "next/head";
import React, { ReactElement, useState } from "react";

interface FormTemplatePageProps {
    organisationId: string;
}

const HomeSidebar = () => {
    return (
        <NavigationList
            items={[
                {
                    link: "/home",
                    icon: faHouse,
                    text: "Home",
                },
                {
                    link: "/forms",
                    icon: faFile,
                    text: "Form Templates",
                    active: true,
                },
                {
                    link: "/users",
                    icon: faUser,
                    text: "Users",
                },
            ]}
        />
    );
};

function FormTemplatePage({ organisationId }: FormTemplatePageProps) {
    const { data, isLoading, error } =
        useGetOrganisationFormTemplates(organisationId);
    const [active, setActive] = useState(0);
    const [modalOpen, setModalOpen] = useState(false);
    return (
        <>
            <Head>
                <title>Organisation Form Templates</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Group px="md" direction="column" grow spacing={0}>
                <Group
                    direction="row"
                    position="apart"
                    sx={{ minHeight: "76px" }}
                >
                    <Title order={3}>Form Templates</Title>
                    <Button onClick={() => setModalOpen(true)}>
                        Add Template
                    </Button>
                </Group>
                <Box
                    p="md"
                    sx={(theme) => ({
                        background: theme.colors.dark[6],
                        borderRadius: theme.radius.md,
                    })}
                >
                    <Grid>
                        <Grid.Col span={3}>
                            {data?.formTemplates?.length
                                ? data.formTemplates.map((formTemplate, i) => (
                                      <Paper
                                          key={formTemplate.id}
                                          onClick={() => setActive(i)}
                                          p={3}
                                      >
                                          <Title order={4}>
                                              {formTemplate.name}
                                          </Title>
                                      </Paper>
                                  ))
                                : "No templates Found"}
                        </Grid.Col>
                        <Grid.Col span={9}>
                            {active && data?.formTemplates ? (
                                <FormTemplate
                                    formTemplate={data?.formTemplates[active]}
                                />
                            ) : (
                                "Select a form"
                            )}
                        </Grid.Col>
                    </Grid>
                </Box>
            </Group>
            <FormTemplateCreateModal
                opened={modalOpen}
                onClose={() => setModalOpen(false)}
            />
            {/*<Group>
                        <OrganisationInviteCreate
                            organisationId={organisationId}
                        />
                    </Group> */}
        </>
    );
}

FormTemplatePage.getLayout = (page: ReactElement) => (
    <LayoutShellSideNav
        sidebarContent={<HomeSidebar />}
        headerProps={{ title: "Form Templates" }}
    >
        {page}
    </LayoutShellSideNav>
);

export async function getServerSideProps({
    params,
    req,
}: GetServerSidePropsContext<{ orgId: string }>) {
    return {
        props: {
            organisationId: params!.orgId,
        },
    };
}

export default FormTemplatePage;
