import { ContentTemplate } from "@components/contentTemplate";
import { ContentTemplateCard } from "@components/contentTemplate/contentTemplate-card";
import { ContentTemplateCreate } from "@components/contentTemplate/contentTemplate-create/contentTemplateCreate";
import { NavigationList } from "@components/navigation/linkList";
import { PageHeader } from "@components/ui/page-header";
import { useGetOrganisationContentTemplates } from "@data/contentTemplate/hooks";
import { useGetOrganisationUsers } from "@data/organisation/hooks";
import { faFile, faHouse, faUser } from "@fortawesome/pro-regular-svg-icons";
import { ContentTemplate as ContentTemplateProps } from "@lib/contentTemplate/data/contentTemplate.model";
import { Grid, Group, SegmentedControl, Stack, useMantineTheme } from "@mantine/core";
import { params as cloudParams } from "@serverless/cloud";
import axios from "axios";
import camelcaseKeys from "camelcase-keys";
import { getCookie } from "cookies-next";
import { LayoutShellSideNav } from "layouts";
import { GetServerSidePropsContext } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { ReactElement, useState } from "react";
import { CleanedCamel } from "type-helpers";

interface ContentTemplatePageProps {
    organisationId: string;
    initialData: { contentTemplates: CleanedCamel<ContentTemplateProps>[] };
}

const HomeSidebar = () => {
    const { asPath } = useRouter();
    return (
        <NavigationList
            items={[
                {
                    link: `${asPath}/home`,
                    icon: faHouse,
                    text: "Home",
                },
                {
                    link: `${asPath}/contentTemplates`,
                    icon: faFile,
                    text: "Content Templates",
                },
                {
                    link: `${asPath}/users`,
                    icon: faUser,
                    text: "Users",
                    active: true,
                },
            ]}
        />
    );
};

function ContentTemplatePage({ organisationId, initialData }: ContentTemplatePageProps) {
    const { data } = useGetOrganisationUsers({ organisationId });
    console.log("data", data);
    return (
        <>
            <Head>
                <title>Organisation Content Templates</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Stack spacing={0} sx={{ height: "100%" }}>
                <PageHeader title="Organisation Users"></PageHeader>
            </Stack>
        </>
    );
}

ContentTemplatePage.getLayout = (page: ReactElement) => (
    <LayoutShellSideNav
        sidebarContent={<HomeSidebar />}
        headerProps={{ title: "Organisation Users" }}
    >
        {page}
    </LayoutShellSideNav>
);

export async function getServerSideProps({
    params,
    req,
}: GetServerSidePropsContext<{ orgId: string }>) {
    const { orgId } = params!;
    const token = getCookie("token", { req });
    const { data } = await axios.get(`${cloudParams.CLOUD_URL}/organisations/${orgId}/users`, {
        headers: {
            "Content-type": "application/json",
            Authorization: `Bearer ${token}`,
        },
    });
    return {
        props: {
            organisationId: params!.orgId,
            initialData: camelcaseKeys(data),
        },
    };
}

export default ContentTemplatePage;
